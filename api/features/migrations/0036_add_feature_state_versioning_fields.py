# Generated by Django 3.2.12 on 2022-02-17 17:14

from django.db import migrations, models
from django.contrib.postgres.operations import (
    RemoveIndexConcurrently,
    AddIndexConcurrently,
)
import django.utils.timezone


# TODO:
#  - separate this into multiple migrations
#  - migrations which have the concurrent index additions / removals need atomic=False


def remove_unique_constraints(apps, schema_editor):
    if schema_editor.connection.vendor == "postgresql":
        # do the things concurrently
        RemoveIndexConcurrently(
            model_name="featurestate", name="unique_for_feature_segment"
        )
        RemoveIndexConcurrently(model_name="featurestate", name="unique_for_identity")
        RemoveIndexConcurrently(
            model_name="featurestate", name="unique_for_environment"
        )
    else:
        schema_editor.RemoveConstraint(
            model_name="featurestate", name="unique_for_feature_segment"
        )
        schema_editor.RemoveConstraint(
            model_name="featurestate", name="unique_for_identity"
        )
        schema_editor.RemoveConstraint(
            model_name="featurestate", name="unique_for_environment"
        )


def reverse_remove_unique_constraints(apps, schema_editor):
    # TODO
    pass


def add_new_unique_constraints(apps, schema_editor):
    if schema_editor.connection.vendor == "postgresql":
        # add the constraints concurrently
        # TODO: not sure if this is actually adding _unique_ indexes?
        AddIndexConcurrently(
            model_name="featurestate",
            index=models.Index(
                condition=models.Q(("identity__isnull", True)),
                fields=("environment", "feature", "feature_segment", "version"),
                name="unique_for_feature_segment",
            ),
        )
        AddIndexConcurrently(
            model_name="featurestate",
            index=models.Index(
                condition=models.Q(("identity__isnull", True)),
                fields=("environment", "feature", "feature_segment", "version"),
                name="unique_for_feature_segment",
            ),
        )
        AddIndexConcurrently(
            model_name="featurestate",
            index=models.Index(
                condition=models.Q(
                    ("feature_segment__isnull", True), ("identity__isnull", True)
                ),
                fields=("environment", "feature", "version"),
                name="unique_for_environment",
            ),
        )
    else:
        schema_editor.AddConstraint(
            model_name="featurestate",
            constraint=models.UniqueConstraint(
                condition=models.Q(("identity__isnull", True)),
                fields=("environment", "feature", "feature_segment", "version"),
                name="unique_for_feature_segment",
            ),
        )
        schema_editor.AddConstraint(
            model_name="featurestate",
            constraint=models.UniqueConstraint(
                condition=models.Q(("feature_segment__isnull", True)),
                fields=("environment", "feature", "identity", "version"),
                name="unique_for_identity",
            ),
        )
        schema_editor.AddConstraint(
            model_name="featurestate",
            constraint=models.UniqueConstraint(
                condition=models.Q(
                    ("feature_segment__isnull", True), ("identity__isnull", True)
                ),
                fields=("environment", "feature", "version"),
                name="unique_for_environment",
            ),
        )


def reverse_add_new_unique_constraints(apps, schema_editor):
    # TODO
    pass


class Migration(migrations.Migration):

    dependencies = [
        ("features", "0035_auto_20211109_0603"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="feature",
            options={"ordering": ("id",)},
        ),
        migrations.RunPython(
            remove_unique_constraints, reverse_code=reverse_remove_unique_constraints
        ),
        migrations.AddField(
            model_name="featurestate",
            name="created_at",
            field=models.DateTimeField(
                auto_now_add=True, default=django.utils.timezone.now
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="featurestate",
            name="status",
            field=models.CharField(
                choices=[("DRAFT", "Draft"), ("COMMITTED", "Committed")],
                default="COMMITTED",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="featurestate",
            name="updated_at",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="featurestate",
            name="version",
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name="historicalfeaturestate",
            name="created_at",
            field=models.DateTimeField(
                blank=True, default=django.utils.timezone.now, editable=False
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalfeaturestate",
            name="status",
            field=models.CharField(
                choices=[("DRAFT", "Draft"), ("COMMITTED", "Committed")],
                default="COMMITTED",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="historicalfeaturestate",
            name="updated_at",
            field=models.DateTimeField(
                blank=True, default=django.utils.timezone.now, editable=False
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="historicalfeaturestate",
            name="version",
            field=models.IntegerField(default=1),
        ),
        migrations.RunPython(
            add_new_unique_constraints, reverse_code=reverse_add_new_unique_constraints
        ),
    ]
